{
  "version": 3,
  "sources": ["../../react-ts-tradingview-widgets/src/utils.tsx", "../../react-ts-tradingview-widgets/src/components/Copyright.tsx", "../../react-ts-tradingview-widgets/src/components/Widget.tsx", "../../react-ts-tradingview-widgets/src/components/AdvancedRealTimeChart.tsx", "../../react-ts-tradingview-widgets/src/components/CompanyProfile.tsx", "../../react-ts-tradingview-widgets/src/components/CryptoCurrencyMarket.tsx", "../../react-ts-tradingview-widgets/src/components/EconomicCalendar.tsx", "../../react-ts-tradingview-widgets/src/components/ForexCrossRates.tsx", "../../react-ts-tradingview-widgets/src/components/ForexHeatMap.tsx", "../../react-ts-tradingview-widgets/src/components/FundamentalData.tsx", "../../react-ts-tradingview-widgets/src/components/MarketData.tsx", "../../react-ts-tradingview-widgets/src/components/MarketOverview.tsx", "../../react-ts-tradingview-widgets/src/components/MiniChart.tsx", "../../react-ts-tradingview-widgets/src/components/Screener.tsx", "../../react-ts-tradingview-widgets/src/components/SingleTicker.tsx", "../../react-ts-tradingview-widgets/src/components/StockMarket.tsx", "../../react-ts-tradingview-widgets/src/components/SymbolInfo.tsx", "../../react-ts-tradingview-widgets/src/components/SymbolOverview.tsx", "../../react-ts-tradingview-widgets/src/components/TechnicalAnalysis.tsx", "../../react-ts-tradingview-widgets/src/components/Ticker.tsx", "../../react-ts-tradingview-widgets/src/components/TickerTape.tsx", "../../react-ts-tradingview-widgets/src/components/Timeline.tsx", "../../react-ts-tradingview-widgets/src/components/StockHeatmap.tsx", "../../react-ts-tradingview-widgets/src/components/CryptoCoinsHeatmap.tsx"],
  "sourcesContent": ["export const createId = (length: number): string => {\n  var result = \"\";\n  var characters = \"abcdef0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n", "import React from \"react\";\nimport { CopyrightStyles } from \"..\";\n\nexport type CopyrightProps = {\n  copyrightStyles?: CopyrightStyles;\n  href?: string;\n  spanText?: string;\n  text?: string;\n  children?: never;\n};\n\nconst Copyright: React.FC<CopyrightProps> = ({\n  href,\n  spanText,\n  text = \"By TradingView\",\n  copyrightStyles,\n}) => {\n  const defaultStyles: CopyrightStyles = {\n    parent: {\n      fontSize: \"13px\",\n      lineHeight: \"32px\",\n      textAlign: \"center\",\n      verticalAlign: \"center\",\n      fontFamily: \"Trebuchet MS, Arial, sans-serif\",\n      color: \"#9db2bd\",\n    },\n    link: {\n      textDecoration: \"none\",\n      color: \"#9db2bd\",\n    },\n    span: {\n      color: \"#2962FF\",\n    },\n  };\n\n  return (\n    <div\n      style={Object.assign({}, defaultStyles.parent, copyrightStyles?.parent)}\n      className=\"tradingview-widget-copyright\"\n    >\n      <a\n        style={Object.assign({}, defaultStyles.link, copyrightStyles?.link)}\n        href={href}\n        target=\"_blank\"\n      >\n        <span\n          style={Object.assign({}, defaultStyles.span, copyrightStyles?.span)}\n        >\n          {spanText}{\" \"}\n        </span>\n      </a>\n      {text}\n    </div>\n  );\n};\n\nexport default Copyright;\n", "import React, { useEffect, useRef } from \"react\";\nimport Copyright, { CopyrightProps } from \"./Copyright\";\n\ninterface WidgetProps {\n  scriptHTML: unknown;\n  scriptSRC: string;\n  containerId?: string;\n  type?: \"Widget\" | \"MediumWidget\";\n  copyrightProps: CopyrightProps;\n}\n\ndeclare const TradingView: any;\n\nconst Widget: React.FC<WidgetProps> = ({\n  scriptHTML,\n  scriptSRC,\n  containerId,\n  type,\n  copyrightProps,\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    let refValue: HTMLDivElement;\n\n    const initWidget = () => {\n      if (ref.current) {\n        const script = document.createElement(\"script\");\n        script.setAttribute(\"data-nscript\", \"afterInteractive\");\n        script.src = scriptSRC;\n        script.async = true;\n        script.type = \"text/javascript\";\n\n        if (type === \"Widget\" || type === \"MediumWidget\") {\n          script.onload = () => {\n            if (typeof TradingView !== undefined) {\n              script.innerHTML = JSON.stringify(\n                type === \"Widget\"\n                  ? new TradingView.widget(scriptHTML)\n                  : type === \"MediumWidget\"\n                  ? new TradingView.MediumWidget(scriptHTML)\n                  : undefined\n              );\n            }\n          };\n        } else {\n          script.innerHTML = JSON.stringify(scriptHTML);\n        }\n        if (!ref.current.querySelector('script[src=\"' + scriptSRC + '\"]')) {\n          ref.current.appendChild(script);\n        }\n        refValue = ref.current;\n      }\n    };\n    requestAnimationFrame(initWidget);\n\n    return () => {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, scriptHTML, type, scriptSRC]);\n\n  const containerKey = containerId || \"tradingview_\" + scriptHTML;\n\n  return (\n    <div style={{ display: \"contents\" }}>\n      {type === \"Widget\" || type === \"MediumWidget\" ? (\n        <div id={containerId} key={containerKey}>\n          <div ref={ref} style={{ display: \"contents\" }} />\n        </div>\n      ) : (\n        <div ref={ref} style={{ display: \"contents\" }} key={containerKey} />\n      )}\n      <Copyright\n        href={copyrightProps.href}\n        spanText={copyrightProps.spanText}\n        text={copyrightProps.text}\n        copyrightStyles={copyrightProps.copyrightStyles}\n      />\n    </div>\n  );\n};\n\nexport default Widget;\n", "import React, { memo } from \"react\";\nimport {\n  ColorTheme,\n  CopyrightStyles,\n  Locales,\n  Studies,\n  Timezone,\n  WidgetFeatures,\n} from \"../index\";\nimport { createId } from \"../utils\";\nimport Widget from \"./Widget\";\n\nexport type AdvancedRealTimeChartProps = {\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  symbol?: string;\n  interval?:\n    | \"1\"\n    | \"3\"\n    | \"5\"\n    | \"15\"\n    | \"30\"\n    | \"60\"\n    | \"120\"\n    | \"180\"\n    | \"240\"\n    | \"D\"\n    | \"W\";\n  range?: \"1D\" | \"5D\" | \"1M\" | \"3M\" | \"6M\" | \"YTD\" | \"12M\" | \"60M\" | \"ALL\";\n  timezone?: Timezone;\n  theme?: ColorTheme;\n  style?: \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\";\n  locale?: Locales | \"hu_HU\" | \"fa_IR\";\n  toolbar_bg?: string;\n  enable_publishing?: boolean;\n  withdateranges?: boolean;\n  hide_top_toolbar?: boolean;\n  hide_legend?: boolean;\n  hide_side_toolbar?: boolean;\n  allow_symbol_change?: boolean;\n  save_image?: boolean;\n  details?: boolean;\n  hotlist?: boolean;\n  calendar?: boolean;\n  show_popup_button?: boolean;\n  popup_width?: string;\n  popup_height?: string;\n  watchlist?: string[];\n  studies?: Studies[];\n  disabled_features?: WidgetFeatures[];\n  enabled_features?: WidgetFeatures[];\n\n  container_id?: string;\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst AdvancedRealTimeChart: React.FC<AdvancedRealTimeChartProps> = ({\n  width = 980,\n  height = 610,\n  autosize = false,\n  symbol = \"NASDAQ:AAPL\",\n  interval = \"1\",\n  range = undefined,\n  timezone = \"UTC\",\n  theme = \"light\",\n  style = \"1\",\n  locale = \"en\",\n  toolbar_bg = \"#f1f3f6\",\n  enable_publishing = false,\n  hide_top_toolbar = false,\n  hide_legend = false,\n  withdateranges = true,\n  hide_side_toolbar = false,\n  allow_symbol_change = true,\n  save_image = true,\n  details = false,\n  hotlist = false,\n  calendar = false,\n  show_popup_button = false,\n  popup_width = \"600\",\n  popup_height = \"400\",\n  watchlist = undefined,\n  studies = undefined,\n  disabled_features = undefined,\n  enabled_features = undefined,\n  container_id = `tradingview_${createId(5)}`,\n\n  copyrightStyles,\n\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        autosize,\n        symbol,\n        ...(!range ? { interval } : { range }),\n        timezone,\n        theme,\n        style,\n        locale,\n        toolbar_bg,\n        enable_publishing,\n        hide_top_toolbar,\n        hide_legend,\n        withdateranges,\n        hide_side_toolbar,\n        allow_symbol_change,\n        save_image,\n        details,\n        hotlist,\n        calendar,\n        ...(show_popup_button && {\n          show_popup_button,\n          popup_width,\n          popup_height,\n        }),\n        watchlist,\n        studies,\n        disabled_features,\n        enabled_features,\n        container_id,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/tv.js\"\n      containerId={container_id}\n      type=\"Widget\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}`,\n        spanText: `${symbol} Chart`,\n      }}\n    />\n  );\n};\n\nexport default memo(AdvancedRealTimeChart);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type CompanyProfileProps = {\n  symbol?: string;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst CompanyProfile: React.FC<CompanyProfileProps> = ({\n  symbol = \"NASDAQ:AAPL\",\n  width = 480,\n  height = 650,\n  autosize = false,\n  colorTheme = \"light\",\n  isTransparent = false,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        symbol,\n        colorTheme,\n        isTransparent,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-symbol-profile.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        spanText: `${symbol} Profile`,\n      }}\n    />\n  );\n};\n\nexport default memo(CompanyProfile);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type CryptoCurrencyMarketProps = {\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  defaultColumn?:\n    | \"overview\"\n    | \"performance\"\n    | \"oscillators\"\n    | \"moving_averages\";\n  screener_type?: \"crypto_mkt\";\n  displayCurrency?: \"USD\" | \"BTC\";\n  colorTheme?: ColorTheme;\n  locale?: Locales;\n  isTransparent?: boolean;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst CryptoCurrencyMarket: React.FC<CryptoCurrencyMarketProps> = ({\n  width = 1000,\n  height = 490,\n  autosize = false,\n  defaultColumn = \"overview\",\n  screener_type = \"crypto_mkt\",\n  displayCurrency = \"USD\",\n  colorTheme = \"light\",\n  locale = \"en\",\n  isTransparent = false,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        defaultColumn,\n        screener_type,\n        displayCurrency,\n        colorTheme,\n        locale,\n        isTransparent,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-screener.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/cryptocurrencies/prices-all/`,\n        spanText: `Cryptocurrency Markets`,\n      }}\n    />\n  );\n};\n\nexport default memo(CryptoCurrencyMarket);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type EconomicCalendarProps = {\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  locale?: Locales;\n  importanceFilter?: \"-1,0,1\" | \"0,1\";\n  countryFilter?: string;\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst EconomicCalendar: React.FC<EconomicCalendarProps> = ({\n  colorTheme = \"light\",\n  isTransparent = false,\n  width = 510,\n  height = 600,\n  autosize = false,\n  locale = \"en\",\n  importanceFilter = \"-1,0,1\",\n  countryFilter = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        colorTheme,\n        isTransparent,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        locale,\n        importanceFilter,\n        countryFilter,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-events.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/currencies/economic-calendar/`,\n        spanText: `Economic Calendar`,\n      }}\n    />\n  );\n};\n\nexport default memo(EconomicCalendar);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, Currencies, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type ForexCrossRatesProps = {\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  currencies?: Currencies[];\n  isTransparent?: boolean;\n  colorTheme?: ColorTheme;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst defaultCurrencies: Currencies[] = [\n  \"EUR\",\n  \"USD\",\n  \"JPY\",\n  \"GBP\",\n  \"CHF\",\n  \"AUD\",\n  \"CAD\",\n  \"NZD\",\n  \"CNY\",\n];\n\nconst ForexCrossRates: React.FC<ForexCrossRatesProps> = ({\n  width = 770,\n  height = 400,\n  autosize = false,\n  currencies = defaultCurrencies,\n  isTransparent = false,\n  colorTheme = \"light\",\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        currencies,\n        isTransparent,\n        colorTheme,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-forex-cross-rates.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/currencies/forex-cross-rates/`,\n        spanText: `Exchange Rates`,\n      }}\n    />\n  );\n};\n\nexport default memo(ForexCrossRates);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, Currencies, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type ForexHeatMapProps = {\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  currencies?: Currencies[];\n  isTransparent?: boolean;\n  colorTheme?: ColorTheme;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst defaultCurrencies: Currencies[] = [\n  \"EUR\",\n  \"USD\",\n  \"JPY\",\n  \"GBP\",\n  \"CHF\",\n  \"AUD\",\n  \"CAD\",\n  \"NZD\",\n  \"CNY\",\n];\n\nconst ForexHeatMap: React.FC<ForexHeatMapProps> = ({\n  width = 700,\n  height = 400,\n  autosize = false,\n  currencies = defaultCurrencies,\n  isTransparent = false,\n  colorTheme = \"light\",\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        currencies,\n        isTransparent,\n        colorTheme,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-forex-heat-map.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/currencies/forex-heat-map/`,\n        spanText: `Forex Heat Map`,\n      }}\n    />\n  );\n};\n\nexport default memo(ForexHeatMap);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, DisplayMode, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type FundamentalDataProps = {\n  symbol?: string;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  largeChartUrl?: string;\n  displayMode?: DisplayMode;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  locale?: Locales;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst FundamentalData: React.FC<FundamentalDataProps> = ({\n  symbol = \"NASDAQ:AAPL\",\n  colorTheme = \"light\",\n  isTransparent = false,\n  largeChartUrl = undefined,\n  displayMode = \"regular\",\n  width = 480,\n  height = 830,\n  autosize = false,\n  locale = \"en\",\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        symbol,\n        colorTheme,\n        isTransparent,\n        largeChartUrl,\n        displayMode,\n        locale,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-financials.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol.replace(\n          \":\",\n          \"-\"\n        )}/financials-overview/`,\n        spanText: `${symbol} Fundamental Data`,\n      }}\n    />\n  );\n};\n\nexport default memo(FundamentalData);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport interface MarketDataSymbol {\n  name: string;\n  displayName?: string;\n}\n\nexport interface MarketDataSymbolsGroup {\n  name: string;\n  originalName: string;\n  symbols: MarketDataSymbol[];\n}\n\nexport interface MarketDataProps {\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  symbolsGroups?: MarketDataSymbolsGroup[];\n  showSymbolLogo?: boolean;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n}\n\nconst defaultSymbolGroup = [\n  {\n    name: \"Indices\",\n    originalName: \"Indices\",\n    symbols: [\n      {\n        name: \"FOREXCOM:SPXUSD\",\n        displayName: \"S&P 500\",\n      },\n      {\n        name: \"FOREXCOM:NSXUSD\",\n        displayName: \"Nasdaq 100\",\n      },\n      {\n        name: \"FOREXCOM:DJI\",\n        displayName: \"Dow 30\",\n      },\n      {\n        name: \"INDEX:NKY\",\n        displayName: \"Nikkei 225\",\n      },\n      {\n        name: \"INDEX:DEU30\",\n        displayName: \"DAX Index\",\n      },\n      {\n        name: \"FOREXCOM:UKXGBP\",\n        displayName: \"UK 100\",\n      },\n    ],\n  },\n  {\n    name: \"Commodities\",\n    originalName: \"Commodities\",\n    symbols: [\n      {\n        name: \"CME_MINI:ES1!\",\n        displayName: \"S&P 500\",\n      },\n      {\n        name: \"CME:6E1!\",\n        displayName: \"Euro\",\n      },\n      {\n        name: \"COMEX:GC1!\",\n        displayName: \"Gold\",\n      },\n      {\n        name: \"NYMEX:CL1!\",\n        displayName: \"Crude Oil\",\n      },\n      {\n        name: \"NYMEX:NG1!\",\n        displayName: \"Natural Gas\",\n      },\n      {\n        name: \"CBOT:ZC1!\",\n        displayName: \"Corn\",\n      },\n    ],\n  },\n  {\n    name: \"Bonds\",\n    originalName: \"Bonds\",\n    symbols: [\n      {\n        name: \"CME:GE1!\",\n        displayName: \"Eurodollar\",\n      },\n      {\n        name: \"CBOT:ZB1!\",\n        displayName: \"T-Bond\",\n      },\n      {\n        name: \"CBOT:UB1!\",\n        displayName: \"Ultra T-Bond\",\n      },\n      {\n        name: \"EUREX:FGBL1!\",\n        displayName: \"Euro Bund\",\n      },\n      {\n        name: \"EUREX:FBTP1!\",\n        displayName: \"Euro BTP\",\n      },\n      {\n        name: \"EUREX:FGBM1!\",\n        displayName: \"Euro BOBL\",\n      },\n    ],\n  },\n  {\n    name: \"Forex\",\n    originalName: \"Forex\",\n    symbols: [\n      {\n        name: \"FX:EURUSD\",\n      },\n      {\n        name: \"FX:GBPUSD\",\n      },\n      {\n        name: \"FX:USDJPY\",\n      },\n      {\n        name: \"FX:USDCHF\",\n      },\n      {\n        name: \"FX:AUDUSD\",\n      },\n      {\n        name: \"FX:USDCAD\",\n      },\n    ],\n  },\n];\n\nconst MarketData: React.FC<MarketDataProps> = ({\n  width = 770,\n  height = 450,\n  autosize = false,\n  symbolsGroups = defaultSymbolGroup,\n  showSymbolLogo = true,\n  colorTheme = \"light\",\n  isTransparent = false,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        symbolsGroups,\n        showSymbolLogo,\n        colorTheme,\n        isTransparent,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-market-quotes.js\"\n      copyrightProps={{\n        copyrightStyles,\n        spanText: `Financial Markets`,\n        href: \"https://www.tradingview.com/markets/\",\n      }}\n    />\n  );\n};\n\nexport default memo(MarketData);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, DateRange, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type MarketOverviewSymbol = {\n  s: string;\n  d?: string;\n};\n\nexport type MarketOverviewTab = {\n  title: string;\n  symbols: MarketOverviewSymbol[];\n  originalTitle: string;\n};\n\nexport type MarketOverviewProps = {\n  colorTheme?: ColorTheme;\n  dateRange?: DateRange;\n  showChart?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n  isTransparent?: boolean;\n  showSymbolLogo?: boolean;\n  showFloatingTooltip?: boolean;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  plotLineColorGrowing?: string;\n  plotLineColorFalling?: string;\n  gridLineColor?: string;\n  scaleFontColor?: string;\n  belowLineFillColorGrowing?: string;\n  belowLineFillColorFalling?: string;\n  belowLineFillColorGrowingBottom?: string;\n  belowLineFillColorFallingBottom?: string;\n  symbolActiveColor?: string;\n  tabs?: MarketOverviewTab[];\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst defaultTabs: MarketOverviewTab[] = [\n  {\n    title: \"Indices\",\n    symbols: [\n      {\n        s: \"FOREXCOM:SPXUSD\",\n        d: \"S&P 500\",\n      },\n      {\n        s: \"FOREXCOM:NSXUSD\",\n        d: \"Nasdaq 100\",\n      },\n      {\n        s: \"FOREXCOM:DJI\",\n        d: \"Dow 30\",\n      },\n      {\n        s: \"INDEX:NKY\",\n        d: \"Nikkei 225\",\n      },\n      {\n        s: \"INDEX:DEU30\",\n        d: \"DAX Index\",\n      },\n      {\n        s: \"FOREXCOM:UKXGBP\",\n        d: \"UK 100\",\n      },\n    ],\n    originalTitle: \"Indices\",\n  },\n  {\n    title: \"Commodities\",\n    symbols: [\n      {\n        s: \"CME_MINI:ES1!\",\n        d: \"S&P 500\",\n      },\n      {\n        s: \"CME:6E1!\",\n        d: \"Euro\",\n      },\n      {\n        s: \"COMEX:GC1!\",\n        d: \"Gold\",\n      },\n      {\n        s: \"NYMEX:CL1!\",\n        d: \"Crude Oil\",\n      },\n      {\n        s: \"NYMEX:NG1!\",\n        d: \"Natural Gas\",\n      },\n      {\n        s: \"CBOT:ZC1!\",\n        d: \"Corn\",\n      },\n    ],\n    originalTitle: \"Commodities\",\n  },\n  {\n    title: \"Bonds\",\n    symbols: [\n      {\n        s: \"CME:GE1!\",\n        d: \"Eurodollar\",\n      },\n      {\n        s: \"CBOT:ZB1!\",\n        d: \"T-Bond\",\n      },\n      {\n        s: \"CBOT:UB1!\",\n        d: \"Ultra T-Bond\",\n      },\n      {\n        s: \"EUREX:FGBL1!\",\n        d: \"Euro Bund\",\n      },\n      {\n        s: \"EUREX:FBTP1!\",\n        d: \"Euro BTP\",\n      },\n      {\n        s: \"EUREX:FGBM1!\",\n        d: \"Euro BOBL\",\n      },\n    ],\n    originalTitle: \"Bonds\",\n  },\n  {\n    title: \"Forex\",\n    symbols: [\n      {\n        s: \"FX:EURUSD\",\n      },\n      {\n        s: \"FX:GBPUSD\",\n      },\n      {\n        s: \"FX:USDJPY\",\n      },\n      {\n        s: \"FX:USDCHF\",\n      },\n      {\n        s: \"FX:AUDUSD\",\n      },\n      {\n        s: \"FX:USDCAD\",\n      },\n    ],\n    originalTitle: \"Forex\",\n  },\n];\n\nconst MarketOverview: React.FC<MarketOverviewProps> = ({\n  colorTheme = \"light\",\n  dateRange = \"12M\",\n  showChart = true,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  isTransparent = false,\n  showSymbolLogo = true,\n  showFloatingTooltip = false,\n  width = 400,\n  height = 660,\n  autosize = false,\n  plotLineColorGrowing = \"rgba(33, 150, 243, 1)\",\n  plotLineColorFalling = \"rgba(33, 150, 243, 1)\",\n  gridLineColor = \"rgba(240, 243, 250, 1)\",\n  scaleFontColor = \"rgba(120, 123, 134, 1)\",\n  belowLineFillColorGrowing = \"rgba(33, 150, 243, 0.12)\",\n  belowLineFillColorFalling = \"rgba(33, 150, 243, 0.12)\",\n  belowLineFillColorGrowingBottom = \"rgba(41, 98, 255, 0)\",\n  belowLineFillColorFallingBottom = \"rgba(41, 98, 255, 0)\",\n  symbolActiveColor = \"rgba(33, 150, 243, 0.12)\",\n  tabs = defaultTabs,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        colorTheme,\n        dateRange,\n        showChart,\n        locale,\n        largeChartUrl,\n        isTransparent,\n        showSymbolLogo,\n        showFloatingTooltip,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        ...(showChart && {\n          plotLineColorGrowing,\n          plotLineColorFalling,\n          gridLineColor,\n          scaleFontColor,\n          belowLineFillColorGrowing,\n          belowLineFillColorFalling,\n          belowLineFillColorGrowingBottom,\n          belowLineFillColorFallingBottom,\n          symbolActiveColor,\n        }),\n        tabs,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js\"\n      copyrightProps={{\n        copyrightStyles,\n        spanText: `Financial Markets`,\n        href: \"https://www.tradingview.com/markets/\",\n      }}\n    />\n  );\n};\n\nexport default memo(MarketOverview);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, DateRange, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type MiniChartProps = {\n  symbol?: string;\n  width?: number | string;\n  height?: number | string;\n  locale?: Locales;\n  dateRange?: DateRange;\n  colorTheme?: ColorTheme;\n  trendLineColor?: string;\n  underLineColor?: string;\n  underLineBottomColor?: string;\n  isTransparent?: boolean;\n  autosize?: boolean;\n  largeChartUrl?: string;\n  chartOnly?: boolean;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst MiniChart: React.FC<MiniChartProps> = ({\n  symbol = \"FX:EURUSD\",\n  width = 350,\n  height = 220,\n  locale = \"en\",\n  dateRange = \"12M\",\n  colorTheme = \"light\",\n  trendLineColor = \"rgba(41, 98, 255, 1)\",\n  underLineColor = \"rgba(41, 98, 255, 0.3)\",\n  underLineBottomColor = \"rgba(41, 98, 255, 0)\",\n  isTransparent = false,\n  autosize = false,\n  largeChartUrl = undefined,\n  chartOnly = false,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbol,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        locale,\n        dateRange,\n        colorTheme,\n        trendLineColor,\n        underLineColor,\n        underLineBottomColor,\n        isTransparent,\n        autosize,\n        largeChartUrl,\n        chartOnly,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-mini-symbol-overview.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        spanText: `${symbol} Rates`,\n      }}\n    />\n  );\n};\n\nexport default memo(MiniChart);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\ntype DefaultColumnForexOrCrypto =\n  //forex, crypto\n  \"overview\" | \"performance\" | \"oscillators\" | \"moving_averages\";\n\ntype DefaultColumnCountries =\n  //US, australia, canada, egypt, germany, india, israel, italy, luxembourgh, poland, korea, sweden, turkey, uk\n  | \"overview\"\n  | \"performance\"\n  | \"valuation\"\n  | \"dividends\"\n  | \"margins\"\n  | \"income_statement\"\n  | \"balance_sheet\"\n  | \"oscillators\"\n  | \"moving_averages\";\n\ntype DefaultScreenForexOrCrypto =\n  //forex, crypto\n  | \"general\"\n  | \"top_gainers\"\n  | \"top_losers\"\n  | \"ath\"\n  | \"atl\"\n  | \"above_52wk_high\"\n  | \"below_52wk_low\"\n  | \"monthly_high\"\n  | \"monthly_low\"\n  | \"most_volatile\"\n  | \"overbought\"\n  | \"oversold\"\n  | \"outperforming_SMA50\"\n  | \"underperforming_SMA50\";\n\ntype DefaultScreenCountries =\n  //US, australia, canada, egypt, germany, india, israel, italy, luxembourgh, poland, korea, sweden, turkey, uk\n  | \"most_capitalized\"\n  | \"volume_leaders\"\n  | \"top_gainers\"\n  | \"top_losers\"\n  | \"ath\"\n  | \"atl\"\n  | \"high_dividend\"\n  | \"above_52wk_high\"\n  | \"below_52wk_low\"\n  | \"monthly_high\"\n  | \"monthly_low\"\n  | \"most_volatile\"\n  | \"unusual_volume\"\n  | \"overbought\"\n  | \"oversold\"\n  | \"outperforming_SMA50\"\n  | \"underperforming_SMA50\"\n  | \"earnings_this_week\";\n\ntype MarketCountries =\n  | \"america\"\n  | \"australia\"\n  | \"canada\"\n  | \"egypt\"\n  | \"germany\"\n  | \"india\"\n  | \"israel\"\n  | \"italy\"\n  | \"luxembourg\"\n  | \"philippines\"\n  | \"poland\"\n  | \"korea\"\n  | \"sweden\"\n  | \"taiwan\"\n  | \"turkey\"\n  | \"uk\"\n  | \"vietnam\";\n\ntype MarketForexOrCrypto = \"forex\" | \"crypto\";\n\ntype ConditionalScreenerProps =\n  | {\n      market?: MarketForexOrCrypto;\n      defaultColumn?: DefaultColumnForexOrCrypto;\n      defaultScreen?: DefaultScreenForexOrCrypto;\n    }\n  | {\n      market?: MarketCountries;\n      defaultColumn?: DefaultColumnCountries;\n      defaultScreen?: DefaultScreenCountries;\n    };\n\nexport type ScreenerProps = {\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  showToolbar?: boolean;\n  colorTheme?: ColorTheme;\n  locale?: Locales;\n  isTransparent?: boolean;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n} & ConditionalScreenerProps;\n\nconst Screener: React.FC<ScreenerProps> = ({\n  width = 1100,\n  height = 512,\n  autosize = false,\n  defaultColumn = \"overview\",\n  defaultScreen = \"general\",\n  market = \"forex\",\n  showToolbar = true,\n  colorTheme = \"light\",\n  locale = \"en\",\n  isTransparent = false,\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        defaultColumn,\n        defaultScreen,\n        market,\n        showToolbar,\n        colorTheme,\n        locale,\n        isTransparent,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-screener.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/forex-screener/`,\n        spanText: `Forex Screener`,\n      }}\n    />\n  );\n};\n\nexport default memo(Screener);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type SingleTickerProps = {\n  symbol?: string;\n  width?: string | number;\n  autosize?: boolean;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst SingleTicker: React.FC<SingleTickerProps> = ({\n  symbol = \"FX:EURUSD\",\n  width = 350,\n  autosize = false,\n  colorTheme = \"light\",\n  isTransparent = false,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbol,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        colorTheme,\n        isTransparent,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-single-quote.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        spanText: `${symbol} Rates`,\n      }}\n    />\n  );\n};\n\nexport default memo(SingleTicker);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, DateRange, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type StockMarketProps = {\n  colorTheme?: ColorTheme;\n  dateRange?: DateRange;\n  exchange?:\n    | \"US\"\n    | \"NASDAQ\"\n    | \"NYSE\"\n    | \"AMEX\"\n    | \"OTC\"\n    | \"ASX\"\n    | \"CSE\"\n    | \"NEO\"\n    | \"TSX\"\n    | \"TSXV\"\n    | \"EGX\"\n    | \"BER\"\n    | \"DUS\"\n    | \"FWB\"\n    | \"HAM\"\n    | \"HAN\"\n    | \"MUN\"\n    | \"SWB\"\n    | \"XETR\"\n    | \"BSE\"\n    | \"NSE\"\n    | \"TASE\"\n    | \"MIL\"\n    | \"LUXSE\"\n    | \"PSE\"\n    | \"NEWCONNECT\"\n    | \"KRX\"\n    | \"NGM\"\n    | \"TPEX\"\n    | \"BIST\"\n    | \"LSE\"\n    | \"LSIN\"\n    | \"HNX\";\n  showChart?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n  isTransparent?: boolean;\n  showSymbolLogo?: boolean;\n  showFloatingTooltip?: boolean;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  plotLineColorGrowing?: string;\n  plotLineColorFalling?: string;\n  gridLineColor?: string;\n  scaleFontColor?: string;\n  belowLineFillColorGrowing?: string;\n  belowLineFillColorFalling?: string;\n  belowLineFillColorGrowingBottom?: string;\n  belowLineFillColorFallingBottom?: string;\n  symbolActiveColor?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst StockMarket: React.FC<StockMarketProps> = ({\n  colorTheme = \"light\",\n  dateRange = \"12M\",\n  exchange = \"US\",\n  showChart = true,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  isTransparent = false,\n  showSymbolLogo = true,\n  showFloatingTooltip = false,\n  width = 400,\n  height = 600,\n  autosize = false,\n  plotLineColorGrowing = \"rgba(33, 150, 243, 1)\",\n  plotLineColorFalling = \"rgba(33, 150, 243, 1)\",\n  gridLineColor = \"rgba(240, 243, 250, 1)\",\n  scaleFontColor = \"rgba(120, 123, 134, 1)\",\n  belowLineFillColorGrowing = \"rgba(33, 150, 243, 0.12)\",\n  belowLineFillColorFalling = \"rgba(33, 150, 243, 0.12)\",\n  belowLineFillColorGrowingBottom = \"rgba(41, 98, 255, 0)\",\n  belowLineFillColorFallingBottom = \"rgba(41, 98, 255, 0)\",\n  symbolActiveColor = \"rgba(33, 150, 243, 0.12)\",\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        colorTheme,\n        dateRange,\n        exchange,\n        showChart,\n        locale,\n        largeChartUrl,\n        isTransparent,\n        showSymbolLogo,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        ...(showChart && {\n          plotLineColorGrowing,\n          plotLineColorFalling,\n          gridLineColor,\n          scaleFontColor,\n          belowLineFillColorGrowing,\n          belowLineFillColorFalling,\n          belowLineFillColorGrowingBottom,\n          belowLineFillColorFallingBottom,\n          symbolActiveColor,\n        }),\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-hotlists.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/stocks-usa/`,\n        spanText: `Stock market Today`,\n      }}\n    />\n  );\n};\n\nexport default memo(StockMarket);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type SymbolInfoProps = {\n  symbol?: string;\n  width?: string | number;\n  autosize?: boolean;\n  locale?: Locales;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst SymbolInfo: React.FC<SymbolInfoProps> = ({\n  symbol = \"NASDAQ:AAPL\",\n  width = 1000,\n  autosize = false,\n  locale = \"en\",\n  colorTheme = \"light\",\n  isTransparent = false,\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbol,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        locale,\n        colorTheme,\n        isTransparent,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-symbol-info.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        spanText: `${symbol} Profile`,\n      }}\n    />\n  );\n};\n\nexport default memo(SymbolInfo);\n", "import React, { memo } from \"react\";\nimport {\n  ChartType,\n  ColorTheme,\n  CopyrightStyles,\n  DateFormat,\n  Locales,\n  ScaleMode,\n  ScalePosition,\n} from \"../index\";\nimport { createId } from \"../utils\";\nimport Widget from \"./Widget\";\n\nexport type SymbolOverviewProps = {\n  symbols?: string[][];\n  chartOnly?: boolean;\n  width?: string | number;\n  height?: string | number;\n  locale?: Locales;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  showFloatingTooltip?: boolean;\n  scalePosition?: ScalePosition;\n  scaleMode?: ScaleMode;\n  fontFamily?:\n    | \"Trebuchet MS, sans-serif\"\n    | \"Arial, sans-serif\"\n    | \"Times, Times New Roman, serif\"\n    | \"Andale Mono, monospace\"\n    | \"Courier New, monospace\"\n    | \"Comic Sans MS, Comic Sans, cursive\"\n    | \"Trattatello, fantasy\";\n  fontSize?:\n    | \"10\"\n    | \"11\"\n    | \"12\"\n    | \"13\"\n    | \"14\"\n    | \"16\"\n    | \"18\"\n    | \"20\"\n    | \"22\"\n    | \"24\"\n    | \"28\";\n  fontColor?: string;\n  noTimeScale?: boolean;\n  hideDateRanges?: boolean;\n  hideMarketStatus?: boolean;\n  valuesTracking?: \"0\" | \"1\" | \"2\" | \"3\";\n  lineWidth?: 1 | 2 | 3 | 4;\n  showVolume?: boolean;\n  volumeUpColor?: string;\n  volumeDownColor?: string;\n  dateFormat: DateFormat;\n  timeHoursFormat?: \"12-hours\" | \"24-hours\";\n\n  chartType?: ChartType;\n\n  //area & line\n  lineColor?: string;\n\n  //area\n  bottomColor?: string;\n  topColor?: string;\n\n  //bars & candles\n  upColor?: string;\n  downColor?: string;\n\n  //candles\n  borderUpColor?: string;\n  borderDownColor?: string;\n  wickUpColor?: string;\n  wickDownColor?: string;\n\n  //colors\n  backGroundColor?: string;\n  gridLineColor?: string;\n  widgetFontColor?: string;\n\n  autosize?: boolean;\n  container_id?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst defaultSymbols = [\n  [\"Apple\", \"AAPL\"],\n  [\"Google\", \"GOOGL\"],\n  [\"Microsoft\", \"MSFT\"],\n];\n\nconst SymbolOverview: React.FC<SymbolOverviewProps> = ({\n  symbols = defaultSymbols,\n  chartOnly = false,\n  width = 1000,\n  height = 400,\n  locale = \"en\",\n  colorTheme = \"light\",\n  fontColor = \"#787B86\",\n  fontSize = \"10\",\n  isTransparent = false,\n  showFloatingTooltip = true,\n  scalePosition = \"no\",\n  scaleMode = \"Normal\",\n  fontFamily = \"Trebuchet MS, sans-serif\",\n  noTimeScale = false,\n  valuesTracking = \"1\",\n  lineWidth = 3,\n  showVolume = false,\n  volumeUpColor = \"rgba(34, 171, 148, 0.5)\",\n  volumeDownColor = \"rgba(247, 82, 95, 0.5)\",\n  dateFormat = \"dd MMM 'yy\",\n  timeHoursFormat = \"24-hours\",\n  hideMarketStatus = false,\n  hideDateRanges = false,\n  chartType = \"area\",\n\n  //area\n  lineColor = \"#2962FF\",\n  bottomColor = \"rgba(41, 98, 255, 0)\",\n  topColor = \"rgba(41, 98, 255, 0.3)\",\n\n  //bars & candles\n  upColor = \"#26a69a\",\n  downColor = \"#ef5350\",\n\n  //candles\n  borderUpColor = \"#26a69a\",\n  borderDownColor = \"#ef5350\",\n  wickUpColor = \"#26a69a\",\n  wickDownColor = \"#ef5350\",\n\n  backGroundColor = \"rgba(19, 23, 34, 0)\",\n  gridLineColor = \"rgba(42, 46, 57, 0)\",\n  widgetFontColor = \"rgba(216, 216, 216, 1)\",\n\n  autosize = false,\n  container_id = `tradingview_${createId(5)}`,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbols,\n        chartOnly,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        locale,\n        colorTheme,\n        fontColor,\n        fontSize,\n        isTransparent,\n        showFloatingTooltip,\n        scalePosition,\n        scaleMode,\n        fontFamily,\n        noTimeScale,\n        hideDateRanges,\n        hideMarketStatus,\n        valuesTracking,\n        lineWidth,\n        showVolume,\n        ...(showVolume && { volumeUpColor, volumeDownColor }),\n        dateFormat,\n        timeHoursFormat,\n        chartType,\n        ...(chartType === \"line\" && { lineColor }),\n        ...(chartType === \"area\" && { lineColor, bottomColor, topColor }),\n        ...((chartType === \"bars\" || chartType === \"candlesticks\") && {\n          upColor,\n          downColor,\n        }),\n        ...(chartType === \"candlesticks\" && {\n          upColor,\n          downColor,\n          borderUpColor,\n          borderDownColor,\n          wickUpColor,\n          wickDownColor,\n        }),\n        backGroundColor,\n        widgetFontColor,\n        gridLineColor,\n        autosize,\n        container_id,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/tv.js\"\n      containerId={container_id}\n      type=\"MediumWidget\"\n      copyrightProps={{\n        href: `https://www.tradingview.com/symbols/${symbols[0][1]}`,\n        spanText: `${symbols[0][1]}`,\n      }}\n    />\n  );\n};\n\nexport default memo(SymbolOverview);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type TechnicalAnalysisProps = {\n  interval?:\n    | \"1m\"\n    | \"5m\"\n    | \"15m\"\n    | \"30m\"\n    | \"1h\"\n    | \"2h\"\n    | \"4h\"\n    | \"1D\"\n    | \"1W\"\n    | \"1M\";\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  isTransparent?: boolean;\n  symbol?: string;\n  showIntervalTabs?: boolean;\n  locale?: Locales;\n  colorTheme?: ColorTheme;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst TechnicalAnalysis: React.FC<TechnicalAnalysisProps> = ({\n  interval = \"1m\",\n  width = 425,\n  height = 450,\n  autosize = false,\n  isTransparent = false,\n  symbol = \"NASDAQ:AAPL\",\n  showIntervalTabs = true,\n  locale = \"en\",\n  colorTheme = \"light\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        interval,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        isTransparent,\n        symbol,\n        showIntervalTabs,\n        locale,\n        colorTheme,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol.replace(\n          \":\",\n          \"-\"\n        )}/technicals/`,\n        spanText: `Technical Analysis for ${symbol}`,\n      }}\n    />\n  );\n};\n\nexport default memo(TechnicalAnalysis);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type TickerProps = {\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  showSymbolLogo?: boolean;\n  locale?: Locales;\n  symbols?: TickerSymbols;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nexport type TickerSymbols = TickerSymbol[];\n\nexport type TickerSymbol = {\n  proName: string;\n  title: string;\n};\n\nconst defaultSymbols: TickerSymbols = [\n  {\n    proName: \"FOREXCOM:SPXUSD\",\n    title: \"S&P 500\",\n  },\n  {\n    proName: \"FOREXCOM:NSXUSD\",\n    title: \"Nasdaq 100\",\n  },\n  {\n    proName: \"FX_IDC:EURUSD\",\n    title: \"EUR/USD\",\n  },\n  {\n    proName: \"BITSTAMP:BTCUSD\",\n    title: \"BTC/USD\",\n  },\n  {\n    proName: \"BITSTAMP:ETHUSD\",\n    title: \"ETH/USD\",\n  },\n];\n\nconst Ticker: React.FC<TickerProps> = ({\n  colorTheme = \"light\",\n  isTransparent = false,\n  showSymbolLogo = true,\n  locale = \"en\",\n  symbols = defaultSymbols,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        colorTheme,\n        isTransparent,\n        showSymbolLogo,\n        locale,\n        symbols,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-tickers.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/`,\n        spanText: `Quotes`,\n      }}\n    />\n  );\n};\n\nexport default memo(Ticker);\n", "import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, DisplayMode, Locales } from \"../index\";\n// import Copyright from \"./Copyright\";\nimport Widget from \"./Widget\";\n\nexport interface TickerTapeSymbol {\n  proName: string;\n  title: string;\n}\n\nexport interface TickerTapeProps {\n  symbols?: TickerTapeSymbol[];\n  showSymbolLogo?: boolean;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  largeChartUrl?: string;\n  displayMode?: DisplayMode;\n  locale?: Locales;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n}\n\nconst defaultSymbols: TickerTapeSymbol[] = [\n  {\n    proName: \"FOREXCOM:SPXUSD\",\n    title: \"S&P 500\",\n  },\n  {\n    proName: \"FOREXCOM:NSXUSD\",\n    title: \"Nasdaq 100\",\n  },\n  {\n    proName: \"FX_IDC:EURUSD\",\n    title: \"EUR/USD\",\n  },\n  {\n    proName: \"BITSTAMP:BTCUSD\",\n    title: \"BTC/USD\",\n  },\n  {\n    proName: \"BITSTAMP:ETHUSD\",\n    title: \"ETH/USD\",\n  },\n];\n\nconst TickerTape: React.FC<TickerTapeProps> = ({\n  symbols = defaultSymbols,\n  showSymbolLogo = true,\n  colorTheme = \"light\",\n  isTransparent = false,\n  largeChartUrl = undefined,\n  displayMode = \"adaptive\",\n  locale = \"en\",\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbols,\n        showSymbolLogo,\n        colorTheme,\n        isTransparent,\n        largeChartUrl,\n        displayMode,\n        locale,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: \"https://www.tradingview.com/markets/\",\n        spanText: \"Markets\",\n      }}\n    />\n  );\n};\n\nexport default memo(TickerTape);\n", "import React, { memo, useEffect, useState } from \"react\";\nimport {\n  ColorTheme,\n  CopyrightStyles,\n  DisplayMode,\n  Locales,\n  Market,\n} from \"../index\";\nimport Widget from \"./Widget\";\n\ntype ConditionalTimelineProps =\n  | {\n      feedMode?: \"market\";\n      market?: Market;\n      symbol?: never;\n    }\n  | {\n      feedMode?: \"symbol\";\n      symbol?: string;\n      market?: never;\n    }\n  | { feedMode?: \"all_symbols\"; market?: never; symbol?: never };\n\nexport type TimelineProps = {\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  displayMode?: DisplayMode;\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n} & ConditionalTimelineProps;\n\nconst Timeline: React.FC<TimelineProps> = ({\n  feedMode = \"all_symbols\",\n  colorTheme = \"light\",\n  isTransparent = false,\n  displayMode = \"regular\",\n  width = 480,\n  height = 830,\n  autosize = false,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  symbol = \"BTCUSD\",\n  market = \"crypto\",\n  ...props\n}) => {\n  const [href, sethref] = useState(\"\");\n  const [spanText, setspanText] = useState(\"\");\n\n  useEffect(() => {\n    if (feedMode == \"all_symbols\") {\n      sethref(\"key_events\");\n      setspanText(\"Daily news roundup\");\n    } else if (feedMode == \"market\") {\n      switch (market) {\n        case \"crypto\":\n          sethref(\"markets/cryptocurrencies/key-events/\");\n          setspanText(\"Daily cryptocurrency news\");\n          break;\n        case \"forex\":\n          sethref(\"markets/currencies/key-events/\");\n          setspanText(\"Daily currency news\");\n          break;\n        case \"stock\":\n          sethref(\"markets/stocks-usa/key-events/\");\n          setspanText(\"Daily stock news\");\n          break;\n        case \"index\":\n          sethref(\"markets/indices/key-events/\");\n          setspanText(\"Daily index news\");\n          break;\n        case \"futures\":\n          sethref(\"markets/futures/key-events/\");\n          setspanText(\"Daily futures news\");\n          break;\n        case \"cfd\":\n          sethref(\"markets/bonds/key-events/\");\n          setspanText(\"Daily bonds news\");\n          break;\n      }\n    } else if (feedMode == \"symbol\") {\n      sethref(`symbols/${symbol}/history-timeline/`);\n      setspanText(`${symbol} History`);\n    }\n  }, [feedMode, symbol, market]);\n\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        feedMode,\n        ...(feedMode == \"market\"\n          ? { market }\n          : feedMode == \"symbol\"\n          ? { symbol }\n          : {}),\n        colorTheme,\n        isTransparent,\n        displayMode,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-timeline.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/${href}`,\n        spanText,\n      }}\n    />\n  );\n};\n\nexport default memo(Timeline);\n", "import React, { FC, memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Exchanges, Locales } from \"..\";\nimport Widget from \"./Widget\";\n\ntype ConditionalStockHeatmapDataSetProps =\n  | {\n      hasTopBar?: true;\n      isSetDataSetEnabled?: boolean;\n    }\n  | {\n      hasTopBar?: false;\n      isSetDataSetEnabled?: never;\n    };\n\nexport type StockHeatmapProps = {\n  dataSource?: string;\n  exchanges?: Exchanges[];\n  grouping?: \"no_group\" | \"sector\";\n  blockSize?:\n    | \"market_cap_basic\"\n    | \"number_of_employees\"\n    | \"dividend_yield_recent\"\n    | \"price_earnings_ttm\"\n    | \"price_sales_current\"\n    | \"price_book_fq\"\n    | \"volume|60\"\n    | \"volume|240\"\n    | \"volume\"\n    | \"volume|1W\"\n    | \"volume|1M\"\n    | \"Value.Traded|60\"\n    | \"Value.Traded|240\"\n    | \"Value.Traded\"\n    | \"Value.Traded|1W\"\n    | \"Value.Traded|1M\";\n  blockColor?:\n    | \"change|60\"\n    | \"change|240\"\n    | \"change\"\n    | \"Perf.W\"\n    | \"Perf.1M\"\n    | \"Perf.3M\"\n    | \"Perf.6M\"\n    | \"Perf.YTD\"\n    | \"Perf.Y\"\n    | \"premarket_change\"\n    | \"postmarket_change\"\n    | \"relative_volume_10d_calc\"\n    | \"Volatility.D\"\n    | \"gap\";\n  locale?: Locales;\n  autoSize?: boolean;\n  height?: number | string;\n  width?: number | string;\n  symbolUrl?: string;\n  colorTheme?: ColorTheme;\n  isZoomEnabled?: boolean;\n  hasSymbolTooltip?: boolean;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n} & ConditionalStockHeatmapDataSetProps;\n\nconst StockHeatmap: FC<StockHeatmapProps> = ({\n  dataSource = \"SPX500\",\n  exchanges = [\"NYSE\"],\n  grouping = \"sector\",\n  blockSize = \"market_cap_basic\",\n  blockColor = \"change\",\n  locale = \"en\",\n  autoSize = false,\n  height = undefined,\n  width = undefined,\n  symbolUrl = \"\",\n  colorTheme = \"light\",\n  isZoomEnabled = true,\n  hasSymbolTooltip = true,\n  hasTopBar = true,\n  isSetDataSetEnabled = true,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        dataSource,\n        exchanges,\n        grouping,\n        blockSize,\n        blockColor,\n        locale,\n        autoSize,\n        ...(autoSize ? { width: \"100%\", height: \"100%\" } : { width, height }),\n        symbolUrl,\n        colorTheme,\n        isZoomEnabled,\n        hasSymbolTooltip,\n        hasTopBar,\n        isSetDataSetEnabled,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-stock-heatmap.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/?utm_source=www.tradingview.com&utm_medium=widget_new&utm_campaign=stock-heatmap`,\n        spanText: `Track all markets on TradingView`,\n      }}\n    />\n  );\n};\n\nexport default memo(StockHeatmap);\n", "import React, { FC, memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"..\";\nimport Widget from \"./Widget\";\n\ntype ConditionalCryptoCoinsHeatmapDataSetProps =\n  | {\n      hasTopBar?: true;\n      isSetDataSetEnabled?: boolean;\n    }\n  | {\n      hasTopBar?: false;\n      isSetDataSetEnabled?: never;\n    };\n\nexport type CryptoCoinsHeatmapProps = {\n  dataSource?:\n    | \"Crypto\"\n    | \"CryptoWithoutBTC\"\n    | \"CryptoWithoutStable\"\n    | \"CryptoDeFi\";\n  blockSize?:\n    | \"market_cap_calc\"\n    | \"market_cap_diluted_calc\"\n    | \"24h_vol_cmc\"\n    | \"tvl\"\n    | \"24h_vol_to_market_cap\"\n    | \"market_cap_to_tvl\";\n  blockColor?:\n    | \"change|60\"\n    | \"change|240\"\n    | \"change\"\n    | \"Perf.W\"\n    | \"Perf.1M\"\n    | \"Perf.3M\"\n    | \"Perf.6M\"\n    | \"Perf.YTD\"\n    | \"Perf.Y\"\n    | \"24h_vol_change_cmc\"\n    | \"24h_vol_cmc\"\n    | \"Volatility.D\"\n    | \"gap\";\n  locale?: Locales;\n  autoSize?: boolean;\n  height?: number | string;\n  width?: number | string;\n  symbolUrl?: string;\n  colorTheme?: ColorTheme;\n  isZoomEnabled?: boolean;\n  hasSymbolTooltip?: boolean;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n} & ConditionalCryptoCoinsHeatmapDataSetProps;\n\nconst CryptoCoinsHeatmap: FC<CryptoCoinsHeatmapProps> = ({\n  dataSource = \"Crypto\",\n  blockSize = \"market_cap_calc\",\n  blockColor = \"change\",\n  locale = \"en\",\n  autoSize = false,\n  height = undefined,\n  width = undefined,\n  symbolUrl = \"\",\n  colorTheme = \"light\",\n  isZoomEnabled = true,\n  hasSymbolTooltip = true,\n  hasTopBar = true,\n  isSetDataSetEnabled = true,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        dataSource,\n        blockSize,\n        blockColor,\n        locale,\n        autoSize,\n        ...(autoSize ? { width: \"100%\", height: \"100%\" } : { width, height }),\n        symbolUrl,\n        colorTheme,\n        isZoomEnabled,\n        hasSymbolTooltip,\n        hasTopBar,\n        isSetDataSetEnabled,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-crypto-coins-heatmap.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/?utm_source=www.tradingview.com&utm_medium=widget_new&utm_campaign=stock-heatmap`,\n        spanText: `Track all markets on TradingView`,\n      }}\n    />\n  );\n};\n\nexport default memo(CryptoCoinsHeatmap);\n"],
  "mappings": "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",
  "names": ["React", "defaultCurrencies", "defaultSymbols"]
}
